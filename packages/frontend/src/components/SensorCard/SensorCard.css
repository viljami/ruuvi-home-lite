/**
 * SensorCard Component Styles
 *
 * Component-specific styling for sensor cards with responsive design
 * focusing on minimal, compact presentation.
 */

@import "../../styles/variables.css";

/* ======= SensorCard Base Styles ======= */
sensor-card {
  display: flex;
  align-items: center;
  padding: 0 var(--space-xs) 2px 8px; /* Increased left padding for color indicator */
  background-color: var(--color-background);
  border-radius: var(--border-radius-sm);
  transition:
    transform var(--transition-fast) ease,
    opacity var(--transition-fast) ease;
  cursor: pointer;
  -webkit-tap-highlight-color: transparent;
  width: 100%;
  height: 25px; /* Fixed compact height */
  max-height: 25px;
  overflow: hidden;
  position: relative; /* For absolute positioning of color indicator */
}

/* Color indicator on the left edge */
sensor-card::before {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  width: var(--border-width-lg);
  background-color: var(--sensor-color, var(--color-primary));
  border-top-left-radius: var(--border-radius-sm);
  border-bottom-left-radius: var(--border-radius-sm);
  opacity: var(--opacity-high);
  transition: opacity var(--transition-fast) ease;
}

/* Brighten color indicator on hover */
sensor-card:hover::before {
  opacity: 1;
}

/* ======= Content Layout ======= */
.sensor-left {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: var(--space-xs);
  width: 100%;
  white-space: nowrap;
  overflow: hidden;
}

/* ======= Sensor Values ======= */
.sensor-temp {
  font-size: var(--font-size-sm);
  color: var(--color-primary);
  flex-shrink: 0;
  transition: font-weight var(--transition-fast) ease;
}

.sensor-humidity {
  font-size: var(--font-size-sm);
  color: var(
    --color-humidity
  ); /* More muted gold that's less distracting but still accessible */
  flex-shrink: 0;
  opacity: var(--opacity-high); /* Slightly dimmer to be less prominent */
}

.sensor-mac {
  font-size: var(--font-size-sm);
  color: var(--color-text-light);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  flex-grow: 1;
  flex-basis: 60%;
  min-width: 0; /* Required for text-overflow to work */
  opacity: var(
    --opacity-high
  ); /* Slightly dimmer for better contrast with values */
}

.sensor-age {
  font-size: var(--font-size-xs);
  color: var(--color-text-light);
  flex-shrink: 0;
  margin-left: auto;
}

/* ======= Card States ======= */
/* Active state (selected in chart) */
sensor-card.sensor-active {
  background-color: var(--color-primary-lighter);
  border: var(--border-width-xs) solid var(--color-primary-border);
  transform: translateY(0);
  z-index: 5;
}

/* Make color indicator more prominent when active */
sensor-card.sensor-active::before {
  width: var(--space-xs);
  opacity: 1;
}

/* Add right edge indicator for active sensors */
sensor-card.sensor-active::after {
  content: "";
  position: absolute;
  right: 0;
  top: 0;
  bottom: 0;
  width: 0px;
  background-color: var(--sensor-color, var(--color-primary));
  opacity: var(--opacity-high);
}

/* Offline state */
sensor-card.sensor-offline {
  opacity: var(--opacity-high);
}

/* Dim the color indicator for offline sensors */
sensor-card.sensor-offline::before {
  opacity: var(--opacity-medium);
}

sensor-card.sensor-offline .sensor-temp,
sensor-card.sensor-offline .sensor-humidity,
sensor-card.sensor-offline .sensor-mac {
  color: var(--color-text-light);
  opacity: var(--opacity-medium);
}

/* Hover state */
@media (hover: hover) {
  sensor-card:hover:not(.sensor-active) {
    transform: translateY(0);
    border-color: var(--color-border-light);
    background-color: var(--color-primary-faint);
  }

  /* Special hover state for active cards */
  sensor-card.sensor-active:hover {
    border-color: var(--color-primary-medium);
    background-color: var(--color-primary-light);
  }

  /* Make text bolder in active cards */
  sensor-card.sensor-active .sensor-temp,
  sensor-card.sensor-active .sensor-mac {
    font-weight: 500;
  }
}

/* Touch feedback */
sensor-card.touch-active:not(.sensor-active) {
  transform: scale(1);
  opacity: var(--opacity-high);
}

sensor-card.sensor-active.touch-active {
  transform: scale(1);
  opacity: var(--opacity-high);
}

/* ======= Editable name in admin mode ======= */
.sensor-mac[style*="cursor: pointer"] {
  position: relative;
  text-decoration: underline;
  text-decoration-style: dotted;
  text-decoration-thickness: 1px;
  text-underline-offset: var(--border-width-xs);
}

.sensor-mac[style*="cursor: pointer"]::after {
  content: "✏️";
  font-size: var(--font-size-xxs);
  margin-left: var(--space-xs);
  opacity: var(--opacity-high);
}

/* ======= Responsive Adjustments ======= */
/* Compact mode for very small screens */
@media (max-width: 360px) {
  sensor-card {
    padding: 0 var(--space-xs) 0 7px;
    /* Height remains fixed at 25px */
  }

  .sensor-left {
    gap: var(--space-xs); /* Tighter spacing on small screens */
  }

  .sensor-temp,
  .sensor-humidity,
  .sensor-mac {
    font-size: var(--font-size-xs);
  }

  .sensor-age {
    font-size: var(--font-size-xxs);
  }
}

/* Tablet grid layout */
@media (min-width: 768px) and (max-width: 991px) {
  sensor-card {
    margin-bottom: 0;
    height: 100%;
  }
}

/* Desktop enhancements */
@media (min-width: 992px) {
  sensor-card {
    transition:
      transform var(--transition-base) ease,
      box-shadow var(--transition-base) ease,
      opacity var(--transition-base) ease;
  }

  sensor-card:hover .sensor-temp {
    color: var(--color-primary);
  }

  sensor-card:hover .sensor-humidity {
    color: var(--color-humidity); /* Match the regular state */
  }
}
